{"version":3,"sources":["context.js","loading.js","flag.js","section.js","error.js","sectionflag.js","navbar.js","App.js","index.js"],"names":["AppContext","React","createContext","url","AppProvider","children","useState","loading","setLoading","isDarkMode","setIsDarkMode","data","setData","flags","setFlags","borders","getFlags","a","fetch","response","json","newflags","changeMedia","mq","setDarkMode","useEffect","getBorders","window","matchMedia","addListener","document","body","classList","remove","add","toString","localStorage","setItem","newBorders","map","flag","index","newborder","id","alphaCode","alpha3Code","nameC","name","push","Provider","value","setOffDarkMode","setNewData","newData","useGlobalContext","useContext","Loading","Flag","item","to","className","src","alt","population","region","capital","SectionStyled","styled","div","Section","filterFlags","setFilterFlags","isView","setisView","filterValue","setFilterValue","filter","console","log","newfilterFlags","type","placeholder","onChange","e","target","undefined","toLowerCase","includes","handleSearch","onClick","textContent","preventDefault","Error","SectionFlag","useParams","currentflag","setFlag","filterflag","find","nativeName","Subregion","topLevelDomain","length","currencies","languages","border","split","NavbarStyled","nav","Navbar","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e74226ca.chunk.js","sourcesContent":["import React, { useState, useContext,useEffect } from 'react';\n\nconst AppContext = React.createContext();\nconst filter=''\nconst url=`https://restcountries.eu/rest/v2/all${filter}`\n//const url=`https://restcountries.eu/rest/v2/name/${filter}`\nconst AppProvider = ({ children }) => {\n  const [loading,setLoading]=useState(true)\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [data,setData]=useState([])\n  const [flags,setFlags]=useState([])\n  //const [border,setBorder]=useState({})\n  const [borders,setBorders]=useState([])\n  const setNewData = (newData)=>{\n      setData(newData)\n  }\n  const getFlags=async()=>{\n    const response = await fetch(url)\n    const newflags = await response.json()\n    setFlags(newflags)\n    //setFilterFlags(newflags)\n    setLoading(false)\n}\nfunction changeMedia(mq){\n  setDarkMode()\n}\n    useEffect(()=>{\n        getFlags()\n        getBorders()\n        const mq=window.matchMedia('(prefers-color-scheme:dark)')\n        mq.addListener(changeMedia);\n        //console.log(mq)\n        // const userPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n        // const userPrefersLight = window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches;\n\n        //   if(userPrefersDark){\n        //       console.log(\"User prefers a dark interface\");\n        //   }\n        //   if(userPrefersLight){\n        //     console.log(\"User prefers a light interface\");\n        //   }\n         \n    },[isDarkMode])\n\n  const setDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n    \n    if(!isDarkMode){\n    document.body.classList.add('dark-mode')\n    }else{\n      document.body.classList.remove('dark-mode')\n    }\n    const theme =isDarkMode.toString\n    window.localStorage.setItem('bg','exe')\n  };\n  const setOffDarkMode = () => {\n    setDarkMode(false);\n  };\n  const getBorders=()=>{\n    let newBorders=[]\n    flags.map((flag,index)=>{\n      let newborder={ id:index,alphaCode:flag.alpha3Code,nameC:flag.name}\n      newBorders.push(newborder)\n    })\n    return newBorders\n  }\n\n  // const getBorders=()=>\n\n  return (\n    <AppContext.Provider\n      value={{\n        borders,\n        loading,\n        flags,\n        data,\n        isDarkMode,\n        getBorders,\n        setDarkMode,\n        setOffDarkMode,\n        setNewData\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n\n","import React from 'react'\n\nfunction Loading() {\n    return (\n        <div>\n            is Loading ...\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\nimport {useGlobalContext} from './context'\nimport { Link } from 'react-router-dom';\nimport Loading from './loading'\nfunction Flag({flags}) {\n    //const[flags,setFlags]=useState(flags)\n    //const[count,setCount]=useState(0)\n    const{isDarkMode,loading}=useGlobalContext()\n    if(loading){\n        return <Loading/>\n    }\n    return (\n        flags.map((item,index)=>{\n            //const {name,population,flag,capital,region}=item\n            //console.log(item.name)\n            return(\n                 <Link to={`/flags-challenger/section/sectionflag/${item.name}`} key={index}>\n                <div className={`flag ${isDarkMode?'dark-mode':''}`}>\n                    <img src={item.flag} alt={item.name}></img>\n                    <div className=\"flag-info\">\n                        <h3>{item.name}</h3>\n                        <p>Population: {item.population}</p>\n                        <p>Region: {item.region}</p>\n                        <p>Capital: {item.capital}</p>\n                    </div>\n                </div>\n                 </Link>\n            )\n            //count ++\n        })\n    )\n}\n\nexport default Flag\n","import React,{useState,useEffect} from 'react'\nimport styled from 'styled-components'\nimport {AiOutlineSearch} from 'react-icons/ai'\nimport {MdKeyboardArrowDown} from 'react-icons/md'\nimport Flag from './flag'\nimport Loading from './loading'\nimport {useGlobalContext} from './context'\nconst SectionStyled = styled.div`\nmargin-top: 40px;\n\n`\n\nfunction Section() {\n    const{isDarkMode,flags,loading}=useGlobalContext()\n    const[filterFlags,setFilterFlags]=useState([flags])\n    const[isView,setisView]=useState(false)\n    const[filterValue,setFilterValue]= useState('Filter by Region')\n    const handleSearch=(e)=>{\n       let value = e.target.value\n       if(value===''||value===undefined){\n           setFilterValue('Filter by Region')\n           setFilterFlags(flags)\n       }else{\n        const newfilterFlags=filterFlags.filter((flag)=>flag.name.toLowerCase().includes(value))\n        setFilterFlags(newfilterFlags)\n        //console.log(newfilterFlags)\n    }\n    }\n    const handleFilter=(e)=>{\n    \n        const value=e.target.textContent\n        if (value!=='') {\n            console.log(value)\n            setFilterValue(value);\n            filter(value);\n        }\n        setisView(!isView)\n        e.preventDefault()\n    }\n    const filter=(region)=>{\n        if (region==='Filter by Region') {\n            console.log('entre aqui')\n            setFilterFlags(flags);\n        }else{\n            const newfilterFlags=flags.filter((flag)=>flag.region === region)\n            setFilterFlags(newfilterFlags);\n        }\n    }\n    useEffect(()=>{\n        setFilterFlags(flags)\n        \n    },[flags])\n    if(loading){\n        return <Loading/>\n    }\n    return (\n        <SectionStyled className={`flags-section container ${isDarkMode?'dark-mode':''}`}>\n            <div className={`searcher-menu ${isDarkMode?'dark-mode':''}`}>\n                <div className={`search ${isDarkMode?'dark-mode':''}`} >\n                    <button>\n                        <AiOutlineSearch/>\n                    </button>\n                    <input type=\"text\" placeholder=\"Search for a country...\" onChange={(e)=>handleSearch(e)}></input>\n                </div>\n                <div className={`filter ${isDarkMode?'dark-mode':''}`} onClick={handleFilter}>\n                    <ul className={`select ${isView?'view':''}`} >\n                        <li className=\"default\">\n                            <button className={`option1 ${isDarkMode?'dark-mode':''}`}><p>{filterValue}</p><MdKeyboardArrowDown /></button>\n                        </li>\n                        <ul className={isDarkMode?'dark-mode':''}>\n                        {/* <li>None</li> */}\n                        <li>Africa</li>\n                        <li>Americas</li>\n                        <li>Asia</li>\n                        <li>Europe</li>\n                        <li>Oceania</li>\n                        </ul>\n                    </ul>\n                      \n                    {/* <select name=\"category\" id=\"category\">\n                        <option value=\"\">Filter by Region</option>\n                        <option value=\"\">Africa</option>\n                        <option value=\"\">America</option>\n                        <option value=\"\">Asia</option>\n                        <option value=\"\">Europe</option>\n                        <option value=\"\">Oceania</option>\n                    </select> */}\n                    \n                </div>\n            </div>\n            <div className={`flags-container container ${isDarkMode?'dark-mode':''}`}>                   \n                    <Flag flags={filterFlags} />               \n            </div>\n        </SectionStyled>\n    )\n}\n\nexport default Section\n","import React from 'react'\nimport {RiErrorWarningFill} from 'react-icons/ri'\nimport { Link} from 'react-router-dom';\nimport {useGlobalContext} from './context'\n\nfunction Error() {\n    const{isDarkMode}=useGlobalContext()\n    return (\n        <div className={`not-found-page ${isDarkMode?'dark-mode':''}`}>\n            <h1>OOPS!!</h1>\n            <h1>ERROR 404</h1>\n            <RiErrorWarningFill/>\n            <h1>PAGE NOT FOUND</h1>\n            <Link to='/' className={`btn ${isDarkMode?'dark-mode':''}`}>Click here to go Home Page</Link>\n        </div>\n    )\n}\n\nexport default Error\n","import React, { useState ,useEffect} from 'react'\nimport { Link, useParams } from 'react-router-dom';\nimport {BsArrowLeft} from 'react-icons/bs'\nimport {useGlobalContext} from './context'\n//import Loading from './loading'\nimport Error from './error'\n//import { link } from 'fs';\n\n\nfunction SectionFlag() {\n    const {name}=useParams()\n    const[currentflag,setFlag]=useState({})\n    const{isDarkMode,flags,borders,getBorders}=useGlobalContext()\n    const[newborder,SetBorder]=useState({})\n    useEffect(() => {\n        const filterflag = flags.find((flag) => flag.name ===name);\n        setFlag(filterflag);\n      }, [flags,name]);\n      \n      if(currentflag===undefined||currentflag==={}){\n        return <Error/>\n      }\n       console.log(getBorders())\n      return (\n        <div className=\"container\">\n            <Link className={`btn back ${isDarkMode?'dark-mode':''}`} to={'/flags-challenger/section'}>\n                <BsArrowLeft/>\n                <p>Back</p>\n            </Link>\n            <div className={`specify-flag-info ${isDarkMode?'dark-mode':''}`}>\n                <img className=\"preview\" src={currentflag.flag} alt={name}></img>\n                <div className='info'>\n                    <div className='info-upper'>\n                    <h1 className='title-name'>{name}</h1>\n                    <div className=\"sections\">\n                    <div className='info-section1'>\n                        <p>Native Name: {currentflag.nativeName}</p>\n                        <p>Population: {currentflag.population}</p>\n                        <p>Region: {currentflag.region}</p>\n                        <p>Sub Region: {currentflag.Subregion}</p>\n                        <p>Capital: {currentflag.capital}</p>\n                    </div>\n                    <div className='info-section2'>\n                    <p>Top Level Domain: \n                        {currentflag.topLevelDomain===undefined?'undefined':currentflag.topLevelDomain.map((item,index)=>{\n                            if(currentflag.topLevelDomain.length >1 && index <currentflag.topLevelDomain.length-1){\n                                console.log(index)\n                                return `${item},`\n                            }\n                               return item\n                        })}\n                        </p>\n                        <p>Currencies:\n                        {currentflag.currencies===undefined?'undefined':currentflag.currencies.map((item,index)=>{\n                            if(currentflag.currencies.length >1 && index <currentflag.currencies.length-1){\n                                return `${item.name},`\n                            }\n                               return item.name\n                        })}\n                        </p>\n                        <p>Languages:\n                        {currentflag.languages===undefined?'undefined':currentflag.languages.map((item,index)=>{\n                            if(currentflag.languages.length >1 && index <currentflag.languages.length-1){\n                                return `${item.name},`\n                            }\n                               return item.name\n                        })}\n                        </p>\n                    </div>\n                    </div>\n                   </div>\n                   <div className=\"info-downner\">\n                       <p>Border Countries:</p>\n                       <div className=\"border-countries\">\n                            {/* {console.log(getBorders())}  */}\n                        {currentflag.borders===undefined?'undefined':currentflag.borders.map((item)=>{\n                            return(\n                                getBorders().map((border,index)=>{\n                                    if(item===border.alphaCode){\n                                        return <Link to={`/flags-challenger/section/sectionflag/${border.nameC}`}key={index} className={`btn countries ${isDarkMode?'dark-mode':''}`}><p>{border.nameC.split(\" \", 1)}</p></Link>\n                                    }\n                                    \n                              })\n                            )\n                           \n                        })}\n                       </div>\n                   </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SectionFlag\n","import React from 'react'\nimport styled from 'styled-components'\n //import Brightness2OutlinedIcon from '@material-ui/icons/Brightness2Outlined';\nimport { IoMoonOutline } from 'react-icons/io5' \nimport {useGlobalContext} from './context'\nconst NavbarStyled = styled.nav`\n      \n      background-color: var(--clr-white-text-dark-mode-elements-ligth-mode);\n      height: 80px;\n      box-shadow: var(--light-shadow);\n      \n      p{\n        margin-left: 5px;\n      }\n       .container{\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        height: 100%;\n      }\n      \n       div button{\n        border: none;\n        background: none;\n        display: flex;\n        align-items: center;\n        cursor:pointer;\n      }\n      &.dark-mode{\n        background-color: var(--clr-dark-blue-elements-dark-mode);\n        color: var(--clr-white-text-dark-mode-elements-ligth-mode);\n      }\n      &.dark-mode div button{\n        color: var(--clr-white-text-dark-mode-elements-ligth-mode);\n      }\n      @media screen and (min-width: 355px) {}\n\n`\n\nfunction Navbar() {\n  const{setDarkMode,isDarkMode}=useGlobalContext()\n\n    return (\n        <NavbarStyled className={`navbar ${isDarkMode?'dark-mode':''}`}>\n            <div className=\"container\">\n            <h1>Where in the world?</h1>\n            <button id=\"dark-mode\" onClick={setDarkMode}>\n            <IoMoonOutline/>\n                <p>Dark Mode</p>\n            </button>\n            </div>\n        </NavbarStyled>\n    )\n}\n\nexport default Navbar\n\n","import React from 'react'\nimport Section from './section'\nimport Error from './error'\nimport SectionFlag from './sectionflag'\nimport Navbar from './navbar'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  \n  return (\n    <Router>\n       \n          <Switch>\n              <Route exact path='/'>\n              <Navbar/>\n              <Section/>\n              </Route>\n              <Route exact path='/flags-challenger'>\n              <Navbar/>\n              <Section/>\n              </Route>\n              <Route exact path='/flags-challenger/section'>\n              <Navbar/>\n              <Section/>\n              </Route>\n              {/* <Route exact path='/section/sectionflag' >\n              <Navbar/>\n              <SectionFlag />\n              </Route> */}\n              <Route path='/flags-challenger/section/sectionflag/:name' children={<SectionFlag/>}>\n              <Navbar/>\n              <SectionFlag />\n              </Route>\n              <Route  path='*'>\n                <Error />\n              </Route>  \n            </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {AppProvider} from './context'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n    <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}