{"version":3,"sources":["context.js","loading.js","flag.js","filter.js","search.js","section.js","error.js","infoflag.js","sectionflag.js","navbar.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","isDarkMode","setIsDarkMode","data","setData","flags","setFlags","borders","getFlags","a","fetch","response","json","newflags","changeMedia","mq","matches","document","body","classList","add","remove","useEffect","getBorders","window","matchMedia","addListener","setDarkMode","newBorders","map","flag","index","newborder","id","alphaCode","alpha3Code","nameC","name","push","Provider","value","setOffDarkMode","setNewData","newData","useGlobalContext","useContext","Loading","className","FlagStyled","styled","div","Flag","item","to","src","alt","population","region","capital","FilterStyled","SelectStyled","ul","UlStyled","Filter","filterValue","handleFilter","isView","onClick","SearchStyled","Search","handleSearch","type","placeholder","onChange","e","SectionStyled","Section","filterFlags","setFilterFlags","setisView","setFilterValue","filter","newfilterFlags","target","undefined","toLowerCase","includes","textContent","preventDefault","Error","InfoFlag","currentflag","nativeName","Subregion","topLevelDomain","length","currencies","languages","border","split","SectionFlag","useParams","setFlag","filterflag","find","NavbarStyled","nav","Navbar","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.65d432f3.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\n\nconst AppContext = React.createContext();\nconst url = `https://restcountries.eu/rest/v2/all`;\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [data, setData] = useState([]);\n  const [flags, setFlags] = useState([]);\n  const [borders, setBorders] = useState([]);\n  const setNewData = (newData) => {\n    setData(newData);\n  };\n  const getFlags = async () => {\n    const response = await fetch(url);\n    const newflags = await response.json();\n    setFlags(newflags);\n    setLoading(false);\n  };\n  function changeMedia(mq) {\n    setIsDarkMode(mq.matches);\n    if (mq.matches) {\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n    }\n  }\n  useEffect(() => {\n    getFlags();\n    getBorders();\n    const mq = window.matchMedia(\"(prefers-color-scheme:dark)\");\n    mq.addListener(changeMedia);\n    if (mq.matches) {\n      setDarkMode();\n    }\n  }, []);\n\n  const setDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n\n    if (!isDarkMode) {\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n    }\n  };\n  const setOffDarkMode = () => {\n    setDarkMode(false);\n  };\n  const getBorders = () => {\n    let newBorders = [];\n    flags.map((flag, index) => {\n      let newborder = {\n        id: index,\n        alphaCode: flag.alpha3Code,\n        nameC: flag.name,\n      };\n      newBorders.push(newborder);\n    });\n    return newBorders;\n  };\n  return (\n    <AppContext.Provider\n      value={{\n        borders,\n        loading,\n        flags,\n        data,\n        isDarkMode,\n        getBorders,\n        setDarkMode,\n        setOffDarkMode,\n        setNewData,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from 'react'\n\nfunction Loading() {\n    return (\n        <div className=\"loading\">\n            is Loading ...\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\nimport {useGlobalContext} from './context'\nimport { Link } from 'react-router-dom';\nimport Loading from './loading'\nimport styled from 'styled-components'\n\nconst FlagStyled = styled.div`\n\n    \nbackground: var(--clr-white);\nborder-radius: var(--radius);\nmargin-top: 2rem;\nbox-shadow: var(--light-shadow);\ntransition: var(--transition);\n  \n&.dark-mode{\n  background: var(--clr-dark-blue-elements-dark-mode);\n  color: var(--clr-white-text-dark-mode-elements-ligth-mode);\n}\n:hover {\n  box-shadow: var(--dark-shadow);\n  transform: translateY(-15px);\n}\nimg {\n  width: 100%;\n  height: 9rem;\n  object-fit: cover;\n  border-top-right-radius: var(--radius);\n  border-top-left-radius: var(--radius);\n}\n.flag-info {\n  display: flex;\n  justify-content: space-between;\n  padding: 25px 25px 50px 25px;\n  flex-direction: column;\n}\n`\nfunction Flag({flags}) {\n    const{isDarkMode,loading}=useGlobalContext()\n    if(loading){\n        return <Loading/>\n    }\n    return (\n        flags.map((item,index)=>{\n            return(\n                 <Link to={`/flags-challenger/section/sectionflag/${item.name}`} key={index}>\n                    <FlagStyled className={`flag ${isDarkMode?'dark-mode':''}`}>\n                        <img src={item.flag} alt={item.name}></img>\n                        <div className=\"flag-info\">\n                            <h3>{item.name}</h3>\n                            <p>Population: {item.population}</p>\n                            <p>Region: {item.region}</p>\n                            <p>Capital: {item.capital}</p>\n                        </div>\n                    </FlagStyled>\n                 </Link>\n            )\n        })\n    )\n}\n\nexport default Flag\n","import React from 'react'\nimport {useGlobalContext} from './context'\nimport {MdKeyboardArrowDown} from 'react-icons/md'\nimport styled from 'styled-components'\nconst FilterStyled = styled.div`\n    height: 50px;\n    background: var(--clr-white-text-dark-mode-elements-ligth-mode);\n    border-radius: var(--radius);\n    box-shadow: var(--light-shadow);\n    transition: var(--transition);\n    width: 200px;\n    border: none;\n    text-align: center;\n    justify-content: space-between;\n  \n  &.dark-mode{\n    background: var(--clr-dark-blue-elements-dark-mode);\n    color: var(--clr-white-text-dark-mode-elements-ligth-mode);\n  }\n  :hover{\n    box-shadow: var(--dark-shadow);\n    cursor: pointer;\n    transform: translateY(-15px);\n  }\n`\nconst SelectStyled = styled.ul`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    top: -15px;\n\n   .option1{\n    position: relative;\n    width: 100%;\n    left: -20px;\n    border: none;\n    background: var(--clr-white-text-dark-mode-elements-ligth-mode);\n    border-radius: var(--radius);\n    padding: 15px;\n    outline: none !important;\n  } \n  .option1.dark-mode{\n    background: var(--clr-dark-blue-elements-dark-mode);\n    color: var(--clr-white-text-dark-mode-elements-ligth-mode);\n  }\n   li{\n    width: 100%;\n    height: 100%;\n  }\n  .option1{\n    display: flex;\n    justify-content: space-between;\n    margin: 15px 20px;\n  }\n  .option1 svg{\n    margin-top: 2px;\n  }\n   &.view ul{\n    display: block;\n    position: relative;\n    top:5px;\n    display: block;\n    background: var(--clr-white-text-dark-mode-elements-ligth-mode);\n    border-radius: var(--radius);\n    box-shadow: var(--light-shadow);\n    transition: var(--transition);\n    width: 200px;\n    border: none;\n    padding-top: 15px;\n    padding-bottom: 15px;\n  }\n  &.view ul.dark-mode{\n   background-color: var(--clr-dark-blue-elements-dark-mode);\n  } \n  &.view ul li{\n    height: 25px;\n    text-align: left;\n    padding-left: 20px;\n  }\n  &.view ul li:hover{\n    box-shadow: var(--dark-shadow);\n    transition: var(--transition);\n  }\n`\nconst UlStyled = styled.ul`\n    display: none;\n`\nfunction Filter({filterValue,handleFilter,isView}) {\n    const{isDarkMode}=useGlobalContext()\n    return (\n        <FilterStyled className={`filter ${isDarkMode?'dark-mode':''}`} onClick={handleFilter}>\n                    <SelectStyled className={`select ${isView?'view':''}`} >\n                        <li className=\"default\">\n                            <button className={`option1 ${isDarkMode?'dark-mode':''}`}><p>{filterValue}</p><MdKeyboardArrowDown /></button>\n                        </li>\n                        <UlStyled className={isDarkMode?'dark-mode':''}>\n                        <li>Africa</li>\n                        <li>Americas</li>\n                        <li>Asia</li>\n                        <li>Europe</li>\n                        <li>Oceania</li>\n                        </UlStyled>\n                    </SelectStyled>\n                </FilterStyled>\n    )\n}\n\nexport default Filter\n","import React from 'react'\nimport {AiOutlineSearch} from 'react-icons/ai'\nimport {useGlobalContext} from './context'\nimport styled from 'styled-components'\n\nconst SearchStyled = styled.div`\n   \n     background: var(--clr-white-text-dark-mode-elements-ligth-mode);\n     border-radius: var(--radius);\n     box-shadow: var(--light-shadow);\n     transition: var(--transition);\n     display: flex;\n     width: 450px;\n   \n   &.dark-mode{\n     background: var(--clr-dark-blue-elements-dark-mode);\n   }\n   :hover{\n     box-shadow: var(--dark-shadow);\n     transform: translateY(-15px);\n   }\n    input,button{\n     height: 50px;\n     \n   }\n    input{\n     border: none;\n     border-top-right-radius: var(--radius);\n     border-bottom-right-radius:var(--radius) ;\n     width: 400px;\n     padding-left: 10px;\n   }\n    &.dark-mode input{\n     background: var(--clr-dark-blue-elements-dark-mode);\n     color: var(--clr-white-text-dark-mode-elements-ligth-mode);\n   }\n   &.dark-mode input::placeholder{\n     color: var(--clr-white-text-dark-mode-elements-ligth-mode);\n   }\n   input:focus{\n     outline: none !important;\n   }\n   button:focus{\n     outline: none !important;\n   }\n   button{\n     border: none;\n     width: 50px;\n     border-top-left-radius: var(--radius);\n     border-bottom-left-radius:var(--radius) ;\n     background: none;\n     /* border-left: 0px; */\n   }\n   &.dark-mode button{\n     color: var(--clr-white-text-dark-mode-elements-ligth-mode);\n   }\n   button svg{\n     height: 20px;\n     width:  20px;\n     margin-left: 20px;\n   }\n`\n\n\nfunction Search({handleSearch}) {\n    const{isDarkMode}=useGlobalContext()\n    return (\n        <SearchStyled className={`search ${isDarkMode?'dark-mode':''}`} >\n                    <button>\n                        <AiOutlineSearch/>\n                    </button>\n                    <input type=\"text\" placeholder=\"Search for a country...\" onChange={(e)=>handleSearch(e)}></input>\n                </SearchStyled>\n    )\n}\n\nexport default Search\n","import React,{useState,useEffect} from 'react'\nimport styled from 'styled-components'\nimport Flag from './flag'\nimport Loading from './loading'\nimport {useGlobalContext} from './context'\nimport Filter from './filter'\nimport Search from './search'\nconst SectionStyled = styled.div`\nmargin-top: 40px;\n\n.searcher-menu {\n    display: flex;\n    justify-content: space-between;  \n   }\n.flags-container{\n    display: grid;\n    grid-gap: 4.5rem;\n    grid-template-columns: repeat(4, 1fr);\n    width: 100%;\n    margin-top: 1rem;\n  }\n\n`\n\nfunction Section() {\n    const{isDarkMode,flags,loading}=useGlobalContext()\n    const[filterFlags,setFilterFlags]=useState([flags])\n    const[isView,setisView]=useState(false)\n    const[filterValue,setFilterValue]= useState('Filter by Region')\n    const handleSearch=(e)=>{\n       let value = e.target.value\n       if(value===''||value===undefined){\n           setFilterValue('Filter by Region')\n           setFilterFlags(flags)\n       }else{\n        const newfilterFlags=filterFlags.filter((flag)=>flag.name.toLowerCase().includes(value.toLowerCase()))\n        setFilterFlags(newfilterFlags)\n    }\n    }\n    const handleFilter=(e)=>{\n    \n        const value=e.target.textContent\n        if (value!=='') {\n            setFilterValue(value);\n            filter(value);\n        }\n        setisView(!isView)\n        e.preventDefault()\n    }\n    const filter=(region)=>{\n        if (region==='Filter by Region') {\n            setFilterFlags(flags);\n        }else{\n            const newfilterFlags=flags.filter((flag)=>flag.region === region)\n            setFilterFlags(newfilterFlags);\n        }\n    }\n    useEffect(()=>{\n        setFilterFlags(flags)\n        \n    },[flags])\n    if(loading){\n        return <Loading/>\n    }\n    return (\n        <SectionStyled className={`flags-section container ${isDarkMode?'dark-mode':''}`}>\n            <div className={`searcher-menu ${isDarkMode?'dark-mode':''}`}>\n                <Search handleSearch={handleSearch}/>\n                <Filter filterValue={filterValue} handleFilter={handleFilter} isView={isView}/>\n            </div>\n            <div className={`flags-container container ${isDarkMode?'dark-mode':''}`}>                   \n                    <Flag flags={filterFlags} />               \n            </div>\n        </SectionStyled>\n    )\n}\n\nexport default Section\n","import React from 'react'\nimport {RiErrorWarningFill} from 'react-icons/ri'\nimport { Link} from 'react-router-dom';\nimport {useGlobalContext} from './context'\n\nfunction Error() {\n    const{isDarkMode}=useGlobalContext()\n    return (\n        <div className={`not-found-page ${isDarkMode?'dark-mode':''}`}>\n            <h1>OOPS!!</h1>\n            <h1>ERROR 404</h1>\n            <RiErrorWarningFill/>\n            <h1>PAGE NOT FOUND</h1>\n            <Link to='/' className={`btn ${isDarkMode?'dark-mode':''}`}>Click here to go Home Page</Link>\n        </div>\n    )\n}\n\nexport default Error\n","import React from 'react'\nimport {useGlobalContext} from './context'\nimport { Link} from 'react-router-dom';\nfunction InfoFlag({currentflag,name}) {\n    const{isDarkMode,flags,getBorders}=useGlobalContext()\n    return (\n        <div className='info'>\n                    <div className='info-upper'>\n                    <h1 className='title-name'>{name}</h1>\n                    <div className=\"sections\">\n                    <div className='info-section1'>\n                        <p>Native Name: {currentflag.nativeName}</p>\n                        <p>Population: {currentflag.population}</p>\n                        <p>Region: {currentflag.region}</p>\n                        <p>Sub Region: {currentflag.Subregion}</p>\n                        <p>Capital: {currentflag.capital}</p>\n                    </div>\n                    <div className='info-section2'>\n                    <p>Top Level Domain: \n                        {currentflag.topLevelDomain===undefined?'undefined':currentflag.topLevelDomain.map((item,index)=>{\n                            if(currentflag.topLevelDomain.length >1 && index <currentflag.topLevelDomain.length-1){\n                                return `${item},`\n                            }\n                               return item\n                        })}\n                        </p>\n                        <p>Currencies:\n                        {currentflag.currencies===undefined?'undefined':currentflag.currencies.map((item,index)=>{\n                            if(currentflag.currencies.length >1 && index <currentflag.currencies.length-1){\n                                return `${item.name},`\n                            }\n                               return item.name\n                        })}\n                        </p>\n                        <p>Languages:\n                        {currentflag.languages===undefined?'undefined':currentflag.languages.map((item,index)=>{\n                            if(currentflag.languages.length >1 && index <currentflag.languages.length-1){\n                                return `${item.name},`\n                            }\n                               return item.name\n                        })}\n                        </p>\n                    </div>\n                    </div>\n                   </div>\n                   <div className=\"info-downner\">\n                       <p>Border Countries:</p>\n                       <div className=\"border-countries\">\n                        {currentflag.borders===undefined?'undefined':currentflag.borders.map((item)=>{\n                            return(\n                                getBorders().map((border,index)=>{\n                                    if(item===border.alphaCode){\n                                        return <Link to={`/flags-challenger/section/sectionflag/${border.nameC}`}key={index} className={`btn countries ${isDarkMode?'dark-mode':''}`}><p>{border.nameC.split(\" \", 1)}</p></Link>\n                                    }\n                                    \n                              })\n                            )\n                           \n                        })}\n                       </div>\n                   </div>\n                </div>\n    )\n}\n\nexport default InfoFlag\n","import React, { useState ,useEffect} from 'react'\nimport { Link, useParams } from 'react-router-dom';\nimport {BsArrowLeft} from 'react-icons/bs'\nimport {useGlobalContext} from './context'\nimport Error from './error'\nimport InfoFlag from './infoflag'\n\nfunction SectionFlag() {\n    const {name}=useParams()\n    const[currentflag,setFlag]=useState({})\n    const{isDarkMode,flags,getBorders}=useGlobalContext()\n    useEffect(() => {\n        const filterflag = flags.find((flag) => flag.name ===name);\n        setFlag(filterflag);\n      }, [flags,name]);\n      \n      if(currentflag===undefined||currentflag==={}){\n        return <Error/>\n      }\n      return (\n        <div className=\"container\">\n            <Link className={`btn back ${isDarkMode?'dark-mode':''}`} to={'/flags-challenger/section'}>\n                <BsArrowLeft/>\n                <p>Back</p>\n            </Link>\n            <div className={`specify-flag-info ${isDarkMode?'dark-mode':''}`}>\n                <img className=\"preview\" src={currentflag.flag} alt={name}></img>\n                <InfoFlag currentflag={currentflag} name={name}/>\n            </div>\n        </div>\n    )\n}\n\nexport default SectionFlag\n","import React from 'react'\nimport styled from 'styled-components'\n //import Brightness2OutlinedIcon from '@material-ui/icons/Brightness2Outlined';\nimport { IoMoonOutline } from 'react-icons/io5' \nimport {useGlobalContext} from './context'\nconst NavbarStyled = styled.nav`\n      \n      background-color: var(--clr-white-text-dark-mode-elements-ligth-mode);\n      height: 80px;\n      box-shadow: var(--light-shadow);\n      \n      p{\n        margin-left: 5px;\n      }\n       .container{\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        height: 100%;\n      }\n      \n       div button{\n        border: none;\n        background: none;\n        display: flex;\n        align-items: center;\n        cursor:pointer;\n      }\n      &.dark-mode{\n        background-color: var(--clr-dark-blue-elements-dark-mode);\n        color: var(--clr-white-text-dark-mode-elements-ligth-mode);\n      }\n      &.dark-mode div button{\n        color: var(--clr-white-text-dark-mode-elements-ligth-mode);\n      }\n      @media screen and (min-width: 355px) {}\n\n`\n\nfunction Navbar() {\n  const{setDarkMode,isDarkMode}=useGlobalContext()\n\n    return (\n        <NavbarStyled className={`navbar ${isDarkMode?'dark-mode':''}`}>\n            <div className=\"container\">\n            <h1>Where in the world?</h1>\n            <button id=\"dark-mode\" onClick={setDarkMode}>\n            <IoMoonOutline/>\n                <p>Dark Mode</p>\n            </button>\n            </div>\n        </NavbarStyled>\n    )\n}\n\nexport default Navbar\n\n","import React from \"react\";\nimport Section from \"./section\";\nimport Error from \"./error\";\nimport SectionFlag from \"./sectionflag\";\nimport Navbar from \"./navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Navbar />\n          <Section />\n        </Route>\n        <Route exact path=\"/flags-challenger\">\n          <Navbar />\n          <Section />\n        </Route>\n        <Route exact path=\"/flags-challenger/section\">\n          <Navbar />\n          <Section />\n        </Route>\n        <Route\n          path=\"/flags-challenger/section/sectionflag/:name\"\n          children={<SectionFlag />}\n        >\n          <Navbar />\n          <SectionFlag />\n        </Route>\n        <Route path=\"*\">\n          <Error />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {AppProvider} from './context'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n    <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}